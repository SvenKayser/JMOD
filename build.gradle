buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'


version = "1.7.10-beta1.2.1-nm7"
group= "com.jeffpeng.jmod" 
archivesBaseName = "jmod"
sourceCompatibility = 1.8
targetCompatibility = 1.8


minecraft {
    version = "1.7.10-10.13.4.1558-1.7.10"
    runDir = "eclipse"
    replace '@VERSION@', project.version
}

jar {
	manifest {
		attributes 'FMLAT': 'jmod_at.cfg'
		attributes 'FMLCorePlugin': 'com.jeffpeng.jmod.JMOD','FMLCorePluginContainsFMLMod': 'false'
		attributes 'Main-Class': 'com.jeffpeng.jmod.validator.Validator'
	}
	
	classifier = 'complete'
}

task deobfJar(type: Jar, dependsOn: 'jar') {
    from "build/source/main"
    classifier "dev"
}

artifacts {
    archives deobfJar
}

repositories {
	maven {
		url "http://www.ryanliptak.com/maven/"
	}
	
	maven {
        url 'http://maven.tterrag.com/'
    }
    
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
}

dependencies {
	compile 'org.ow2.asm:asm-debug-all:5.0.3'
	
	compile "applecore:AppleCore:1.7.10-1.3.1+171.f62ad:api"
	
	compile "exnihilo:Ex-Nihilo:1.38-49:deobf"
	
	compile "codechicken:CodeChickenLib:1.7.10-1.1.1.104:dev"
		
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

sourceSets {

    main {
        java {
            srcDirs += 'src/api/java'
        }
        
        resources {
            srcDir "src/main/resources/"
        }
    }
    
/*    pluginIgniter {
    	java {
    		srcDirs += 'src/main/java/jmodplugins/igniter'
    	}
    }
  */  
    
}

ext.jarFile = zipTree(jar.archivePath)


processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task pluginIgniterJar(type: Jar, dependsOn: reobf){
	archiveName = 'igniter.jmodplugin'
    doFirst {
		from(project.ext.jarFile){
			includes.addAll(["jmodplugins/igniter/**"])
		}
	}
}

task apiJar(type: Jar, dependsOn: reobf){
	classifier = 'api'
    doFirst {
		from(project.ext.jarFile){
			includes.addAll(["jmod/API/**"])
		}
	}
}


task coreJar(type: Jar, dependsOn: reobf){

	classifier = ''
	manifest {
			attributes 'FMLAT': 'jmod_at.cfg'
			attributes 'FMLCorePlugin': 'com.jeffpeng.jmod.JMOD','FMLCorePluginContainsFMLMod': 'false'
			attributes 'Main-Class': 'com.jeffpeng.jmod.validator.Validator'
		}
	doFirst {
		from(project.ext.jarFile){
			includes.addAll(["assets/**","com/jeffpeng/jmod/**","com/cricketcraft/**","jmod/API/**","META-INF/**","LICENSE**"])
		}
	}
}

task devTestJar(type: Jar, dependsOn: reobf){
	archiveName = 'jmod-untyped-devtest.jar'
	classifier = ''
	manifest {
			attributes 'FMLAT': 'jmod_at.cfg'
			attributes 'FMLCorePlugin': 'com.jeffpeng.jmod.JMOD','FMLCorePluginContainsFMLMod': 'false'
			attributes 'Main-Class': 'com.jeffpeng.jmod.validator.Validator'
		}
	doFirst {
		from(project.ext.jarFile){
			includes.addAll(["assets/**","com/jeffpeng/jmod/**","com/cricketcraft/**","jmod/API/**","META-INF/**","LICENSE**"])
		}
	}
	
}

task devtestreplace{
	minecraft {
		replace '@devversion@', 'true'
	}
}

task buildtypetest(dependsOn: ['devtestreplace','devTestJar'])
task buildAll(dependsOn:['coreJar','pluginIgniterJar','apiJar']);

classes.mustRunAfter devtestreplace
